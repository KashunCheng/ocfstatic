"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8383],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var i=r.createContext({}),l=function(e){var t=r.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,i=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),d=l(n),m=a,f=d["".concat(i,".").concat(m)]||d[m]||c[m]||s;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,o=new Array(s);o[0]=d;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:a,o[1]=p;for(var l=2;l<s;l++)o[l]=n[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},165:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>i,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>p,toc:()=>l});var r=n(7462),a=(n(7294),n(3905));const s={title:"ssh-list: run command via SSH on many hosts simultaneously"},o=void 0,p={unversionedId:"staff/scripts/ssh-list",id:"staff/scripts/ssh-list",title:"ssh-list: run command via SSH on many hosts simultaneously",description:"ssh-list is a small wrapper around parallel-ssh which reads lists of hosts",source:"@site/docs/staff/scripts/ssh-list.md",sourceDirName:"staff/scripts",slug:"/staff/scripts/ssh-list",permalink:"/docs/staff/scripts/ssh-list",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/staff/scripts/ssh-list.md",tags:[],version:"current",frontMatter:{title:"ssh-list: run command via SSH on many hosts simultaneously"},sidebar:"tutorialSidebar",previous:{title:"sorry: disable an OCF account",permalink:"/docs/staff/scripts/sorry"},next:{title:"unsorry: re-enable a sorried account",permalink:"/docs/staff/scripts/unsorry"}},i={},l=[{value:"Run puppet once",id:"run-puppet-once",level:3},{value:"Restart unused desktops",id:"restart-unused-desktops",level:3},{value:"Run <code>apt-get update</code> to clear apt caches",id:"run-apt-get-update-to-clear-apt-caches",level:3}],u={toc:l};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"ssh-list")," is a small wrapper around ",(0,a.kt)("inlineCode",{parentName:"p"},"parallel-ssh")," which reads lists of hosts\nfrom LDAP."),(0,a.kt)("p",null,"The usage of ",(0,a.kt)("inlineCode",{parentName:"p"},"ssh-list")," looks like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ssh-list <TYPE> [arguments to parallel-ssh]\n")),(0,a.kt)("p",null,"The argument ",(0,a.kt)("inlineCode",{parentName:"p"},"<TYPE>")," is interpreted by ",(0,a.kt)("inlineCode",{parentName:"p"},"ssh-list"),", and the arguments after are\npassed verbatim to ",(0,a.kt)("inlineCode",{parentName:"p"},"parallel-ssh"),"."),(0,a.kt)("p",null,"In most cases, you want at least ",(0,a.kt)("inlineCode",{parentName:"p"},"-i")," in the arguments to parallel-ssh. ",(0,a.kt)("inlineCode",{parentName:"p"},"-i"),"\nprints out the stdout and stderr for each host you are running the command on.\nFor example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ssh-list all -i whoami\n")),(0,a.kt)("p",null,"In most cases, it's most useful to use a type like ",(0,a.kt)("inlineCode",{parentName:"p"},"desktop")," rather than ",(0,a.kt)("inlineCode",{parentName:"p"},"all"),"."),(0,a.kt)("p",null,"If you get a ton of authentication errors, don't provide your password, just do\n",(0,a.kt)("inlineCode",{parentName:"p"},"kinit $USER")," first (your Kerberos ticket probably expired, or you probably\nlogged in with an SSH key)."),(0,a.kt)("p",null,"Some useful commands are below (please add more!):"),(0,a.kt)("h3",{id:"run-puppet-once"},"Run puppet once"),(0,a.kt)("p",null,"Anyone in ",(0,a.kt)("inlineCode",{parentName:"p"},"ocfroot")," can call ",(0,a.kt)("inlineCode",{parentName:"p"},"sudo puppet-trigger")," without providing a\npassword."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ssh-list desktop -i 'sudo puppet-trigger'\n")),(0,a.kt)("h3",{id:"restart-unused-desktops"},"Restart unused desktops"),(0,a.kt)("p",null,"Anyone in ",(0,a.kt)("inlineCode",{parentName:"p"},"ocfroot")," can call ",(0,a.kt)("inlineCode",{parentName:"p"},"sudo shutdown")," without providing a password."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"ssh-list desktop -i '[ $(who | wc -l) -eq 0 ] && sudo shutdown -r now'\n")),(0,a.kt)("h3",{id:"run-apt-get-update-to-clear-apt-caches"},"Run ",(0,a.kt)("inlineCode",{parentName:"h3"},"apt-get update")," to clear apt caches"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"ocfroot")," can't run passwordless ",(0,a.kt)("inlineCode",{parentName:"p"},"apt-get"),", so you need to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"apt-dater"),"\nkeytab."),(0,a.kt)("p",null,"From supernova:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"sudo kinit -k -t /root/apt-dater.keytab 'apt-dater@OCF.BERKELEY.EDU' \\\n    ssh-list desktop -l apt-dater -i 'sudo apt-get update'\n")))}c.isMDXComponent=!0}}]);