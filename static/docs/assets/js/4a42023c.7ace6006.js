"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[382],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>m});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)t=i[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),p=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return a.createElement(d.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(t),m=r,k=u["".concat(d,".").concat(m)]||u[m]||s[m]||i;return t?a.createElement(k,o(o({ref:n},c),{},{components:t})):a.createElement(k,o({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=u;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8058:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>o,default:()=>s,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var a=t(7462),r=(t(7294),t(3905));const i={title:"LDAP"},o=void 0,l={unversionedId:"staff/backend/ldap",id:"staff/backend/ldap",title:"LDAP",description:"Introduction",source:"@site/docs/staff/backend/ldap.md",sourceDirName:"staff/backend",slug:"/staff/backend/ldap",permalink:"/docs/staff/backend/ldap",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/staff/backend/ldap.md",tags:[],version:"current",frontMatter:{title:"LDAP"},sidebar:"tutorialSidebar",previous:{title:"Kubernetes",permalink:"/docs/staff/backend/kubernetes"},next:{title:"KVM/Libvirt",permalink:"/docs/staff/backend/libvirt"}},d={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Definition of an OCF account",id:"definition-of-an-ocf-account",level:2},{value:"Definition of a POSIX group",id:"definition-of-a-posix-group",level:2},{value:"Utilities",id:"utilities",level:2},{value:"<code>ldapsearch</code>",id:"ldapsearch",level:3},{value:"<code>ldapvi</code>",id:"ldapvi",level:3},{value:"<code>ldapadd</code>",id:"ldapadd",level:3}],c={toc:p};function s(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"The Lightweight Directory Access Protocol accesses a directory service over a\nnetwork. We currently use OpenLDAP to store information about accounts (except\npassword hashes which are in ",(0,r.kt)("a",{parentName:"p",href:"/docs/staff/backend/kerberos"},"Kerberos"),")."),(0,r.kt)("h2",{id:"definition-of-an-ocf-account"},"Definition of an OCF account"),(0,r.kt)("p",null,"Attributes that define an OCF account (group or individual). Some of these\nattributes cannot be seen without the proper permissions, such as ",(0,r.kt)("inlineCode",{parentName:"p"},"mail"),":"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dn"),": distinguished name; primary key for the entry. Should be in the form\n",(0,r.kt)("inlineCode",{parentName:"li"},"uid=[uid],ou=People,dc=OCF,dc=Berkeley,dc=EDU"),", where ",(0,r.kt)("inlineCode",{parentName:"li"},"uid")," is the user's\nusername."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"objectClass"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"account"),", ",(0,r.kt)("inlineCode",{parentName:"li"},"ocfAccount"),", and ",(0,r.kt)("inlineCode",{parentName:"li"},"posixAccount")," for accounts."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cn"),": common name; full name for users, group name for group accounts"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"uid"),": username"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"uidNumber"),": POSIX user ID number (sequentially-assigned starting at 1000)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gidNumber"),": primary POSIX group ID number (For example, 1000 if in group\n",(0,r.kt)("inlineCode",{parentName:"li"},"ocf"),", or 2390 for group ",(0,r.kt)("inlineCode",{parentName:"li"},"sorry"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"homeDirectory"),": location of home directory"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"loginShell"),": shell (usually ",(0,r.kt)("inlineCode",{parentName:"li"},"/bin/bash"),")"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"mail"),": Email address. Usually a @berkeley.edu email, but any email address\nworks. Some OCF staff have @g.ocf.berkeley.edu emails (Google Apps)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"calnetUid"),": CalNet ID number (for individuals)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"callinkOid"),": CalLink organization ID number (for student groups)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"userPassword"),": Not actually a password, this is only used for pass-through\nauthentication with Kerberos, so that the LDAP server can be authenticated\nwith directly for things that don't support Kerberos."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"creationTime"),": Account creation time in ISO 8601 format")),(0,r.kt)("h2",{id:"definition-of-a-posix-group"},"Definition of a POSIX group"),(0,r.kt)("p",null,"Attributes that define a POSIX group:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"dn"),": distinguished name; primary key for the entry. Should be in the form\n",(0,r.kt)("inlineCode",{parentName:"li"},"cn=[gid],ou=Group,dc=OCF,dc=Berkeley,dc=EDU"),", where ",(0,r.kt)("inlineCode",{parentName:"li"},"gid")," is the group's\nname."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"objectClass"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"posixGroup")," for groups"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"cn"),": common name; full name"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"description"),": description of the group"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"gidNumber"),": POSIX group ID number (greater than 1000, less than 1000 is\nreserved for system groups)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"memberUid"),": A member of the group (will often have multiple memberUid\nattributes)")),(0,r.kt)("h2",{id:"utilities"},"Utilities"),(0,r.kt)("h3",{id:"ldapsearch"},(0,r.kt)("inlineCode",{parentName:"h3"},"ldapsearch")),(0,r.kt)("p",null,"For most staff, their primary interface to LDAP will be ",(0,r.kt)("inlineCode",{parentName:"p"},"ldapsearch"),".\n",(0,r.kt)("inlineCode",{parentName:"p"},"ldapsearch")," is a powerful program that allows queries of the LDAP database.\nFor most usage, you want to type in ",(0,r.kt)("inlineCode",{parentName:"p"},"-x"),", which skips authentication. After\nthat you provide a search filter (in this case UID)."),(0,r.kt)("p",null,"Searching for an account:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ ldapsearch -x uid=sanjayk\ndn: uid=sanjayk,ou=People,dc=OCF,dc=Berkeley,dc=EDU\nobjectClass: ocfAccount\nobjectClass: account\nobjectClass: posixAccount\ncn: Sanjay Krishnan\nuid: sanjayk\nuidNumber: 18298\ngidNumber: 20\nhomeDirectory: /home/s/sa/sanjayk\ngecos: Sanjay Krishnan\nloginShell: /bin/tcsh\ncalnetUid: 646431\n")),(0,r.kt)("p",null,"Searching for an account in a group:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ ldapsearch -x memberUid=sanjayk | grep cn:\ncn: ocfstaff\ncn: admin\n")),(0,r.kt)("p",null,"Searching for all accounts created after a certain time:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ ldapsearch -x '(creationTime>=20160101000000Z)'\n<many lines of output>\n")),(0,r.kt)("h3",{id:"ldapvi"},(0,r.kt)("inlineCode",{parentName:"h3"},"ldapvi")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ldapvi"),' is a "text editor" for LDAP which can generate LDIF change records to\npass to ',(0,r.kt)("inlineCode",{parentName:"p"},"ldapadd")," (or modify directly if you have the proper ",(0,r.kt)("a",{parentName:"p",href:"/docs/staff/powers"},"permissions"),"). The easiest way to edit a single record with ",(0,r.kt)("inlineCode",{parentName:"p"},"ldapvi")," is to\njust run ",(0,r.kt)("inlineCode",{parentName:"p"},"kinit [username]/admin ldapvi [record]"),", which will authenticate with\nKerberos and then run ",(0,r.kt)("inlineCode",{parentName:"p"},"ldapvi")," all in one step."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ ldapvi uid=daradib\n0 uid=daradib,ou=People,dc=OCF,dc=Berkeley,dc=EDU\nobjectClass: ocfAccount\nobjectClass: account\nobjectClass: posixAccount\ncn: Dara Adib\nuid: daradib\nuidNumber: 19892\ngidNumber: 20\nhomeDirectory: /home/d/da/daradib\nloginShell: /bin/bash\ncalnetUid: 872544\n")),(0,r.kt)("p",null,"Now if you make changes to some attributes (say, change the shell to ",(0,r.kt)("inlineCode",{parentName:"p"},"tcsh"),")\nand try to save the temporary file which has been opened in a text editor:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"      1 entry read\nadd: 0, rename: 0, modify: 1, delete: 0\nAction? [yYqQvVebB*rsf+?]\n")),(0,r.kt)("p",null,"You can enter ",(0,r.kt)("inlineCode",{parentName:"p"},"v")," to view the LDIF change record (or ",(0,r.kt)("inlineCode",{parentName:"p"},"?")," for help)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"dn: uid=daradib,ou=People,dc=OCF,dc=Berkeley,dc=EDU\nchangetype: modify\nreplace: loginShell\nloginShell: /bin/tcsh\n")),(0,r.kt)("p",null,"You can enter ",(0,r.kt)("inlineCode",{parentName:"p"},"y")," to apply changes, ",(0,r.kt)("inlineCode",{parentName:"p"},"q")," to save the LDIF change record as a\nfile in your current directory, or ",(0,r.kt)("inlineCode",{parentName:"p"},"Q")," to discard."),(0,r.kt)("h3",{id:"ldapadd"},(0,r.kt)("inlineCode",{parentName:"h3"},"ldapadd")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"ldapadd")," is a utility to add entries to the LDAP directory if you have the\nproper ",(0,r.kt)("a",{parentName:"p",href:"/docs/staff/powers"},"permissions"),"."),(0,r.kt)("p",null,"To add an account, first create a file (we call it ",(0,r.kt)("inlineCode",{parentName:"p"},"user_file"),"):"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"dn: uid=asdf,ou=People,dc=OCF,dc=Berkeley,dc=EDU\nobjectClass: ocfAccount\nobjectClass: account\nobjectClass: posixAccount\ncn: asdf\nuid: asdf\nuidNumber: 25444\ngidNumber: 20\nhomeDirectory: /home/a/as/asdf\nloginShell: /bin/bash\ncalnetUid: 758472\n")),(0,r.kt)("p",null,"Then authenticate with ",(0,r.kt)("a",{parentName:"p",href:"/docs/staff/backend/kerberos"},"Kerberos"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ kinit myusername/admin\n")),(0,r.kt)("p",null,"Finally run ",(0,r.kt)("inlineCode",{parentName:"p"},"ldapadd"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ ldapadd < user_file\n")),(0,r.kt)("p",null,"This also works on lists of entries to add separated by empty newlines."))}s.isMDXComponent=!0}}]);