"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9002],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var a=n(7294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var o=a.createContext({}),u=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(o.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,r=e.originalType,o=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),f=l,m=d["".concat(o,".").concat(f)]||d[f]||c[f]||r;return n?a.createElement(m,i(i({ref:t},p),{},{components:n})):a.createElement(m,i({ref:t},p))}));function f(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=n.length,i=new Array(r);i[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s.mdxType="string"==typeof e?e:l,i[1]=s;for(var u=2;u<r;u++)i[u]=n[u];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},6336:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>c,frontMatter:()=>r,metadata:()=>s,toc:()=>u});var a=n(7462),l=(n(7294),n(3905));const r={title:"Internal firewalls"},i=void 0,s={unversionedId:"staff/backend/internal-firewalls",id:"staff/backend/internal-firewalls",title:"Internal firewalls",description:"While the external firewall regulates network",source:"@site/docs/staff/backend/internal-firewalls.md",sourceDirName:"staff/backend",slug:"/staff/backend/internal-firewalls",permalink:"/docs/staff/backend/internal-firewalls",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/staff/backend/internal-firewalls.md",tags:[],version:"current",frontMatter:{title:"Internal firewalls"},sidebar:"tutorialSidebar",previous:{title:"Git",permalink:"/docs/staff/backend/git"},next:{title:"Jenkins",permalink:"/docs/staff/backend/jenkins"}},o={},u=[{value:"Implementation",id:"implementation",level:2},{value:"Debugging",id:"debugging",level:2},{value:"<code>iptables</code> commands",id:"iptables-commands",level:3},{value:"Disabling firewalls through hiera",id:"disabling-firewalls-through-hiera",level:3}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,l.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"While the ",(0,l.kt)("a",{parentName:"p",href:"/docs/staff/backend/firewall"},"external firewall")," regulates network\ntraffic to the OCF from outside the OCF network, internal firewalls are\nresponsible for regulating network traffic between different machines within the\nOCF."),(0,l.kt)("p",null,"OCF machines are broadly classed into internal and ",(0,l.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/DMZ_(computing)"},"DMZ"),". Internal machines\nare those which are not running user code and are not staff VMs, specifically\nthose in the IP range 5-90 (excluding the ones in the DMZ listed below). The DMZ\nconsists of all other machines, including:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"Those running user code (i.e. the public SSH login, apphosting, and web\nservers, and desktops)"),(0,l.kt)("li",{parentName:"ul"},"Staff VMs"),(0,l.kt)("li",{parentName:"ul"},"External machines plugged into the OCF network (e.g. staffers' laptops)")),(0,l.kt)("p",null,"Each server filters input traffic as follows:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"All servers allow traffic from internal servers, which are considered\ntrusted. For instance, all servers will accept traffic from supernova."),(0,l.kt)("li",{parentName:"ul"},"All servers disallow traffic from the DMZ by default, as those hosts are\nconsidered untrusted. For instance, hal will not accept traffic from tsunami\nwithout a special exception. (DMZ servers can't even talk to other DMZ\nservers by default.)"),(0,l.kt)("li",{parentName:"ul"},"Some servers allow certain traffic from DMZ servers. The precise rules can be\nfound in the puppet code. Generally:",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"DMZ servers can talk to needed production services on the appropriate\nports."),(0,l.kt)("li",{parentName:"ul"},"Staff VMs allow all incoming traffic."),(0,l.kt)("li",{parentName:"ul"},"Staff VMs and desktops are allowed to directly SSH into internal servers."),(0,l.kt)("li",{parentName:"ul"},"There are other miscellaneous rules allowing other traffic.")))),(0,l.kt)("p",null,"In addition to input rules, it's necessary to have some output rules as well to\nprotect devices that we don't trust to have reliable firewalls, such as printers\nand IPMI devices. The rules for those devices work a little differently:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},'A handful of "uber-trusted" servers, such as supernova and hypervisors, are\nallowed to talk to all of these special devices. This allows us to use these\nservers for the purposes of configuring or debugging those devices.'),(0,l.kt)("li",{parentName:"ul"},"Some other servers can talk to certain special devices. For example, the\nprint server can talk to printers."),(0,l.kt)("li",{parentName:"ul"},"Most other hosts cannot talk to these special devices.")),(0,l.kt)("p",null,"Output rules are not a perfect solution, since they operate on a voluntary\nmechanism and can't prevent non-OCF hosts that may be connected to our network\nfrom contacting these special devices anyway. Preventing this is a future\nproject."),(0,l.kt)("p",null,"It's important to note that internal firewalls are set up to only filter traffic\nfrom other OCF machines. Traffic from outside the OCF network is the sole\nresponsibility of the external firewall."),(0,l.kt)("h2",{id:"implementation"},"Implementation"),(0,l.kt)("p",null,"Internal firewalls are implemented using iptables rules set by Puppet with the\n",(0,l.kt)("a",{parentName:"p",href:"https://forge.puppet.com/puppetlabs/firewall"},"puppetlabs-firewall module"),". We place all of our input\nrules in the ",(0,l.kt)("inlineCode",{parentName:"p"},"PUPPET-INPUT")," chain and all of our output rules in the\n",(0,l.kt)("inlineCode",{parentName:"p"},"PUPPET-OUTPUT")," chain."),(0,l.kt)("p",null,"Firewall rules are added by using ",(0,l.kt)("inlineCode",{parentName:"p"},"firewall_multi")," and\n",(0,l.kt)("inlineCode",{parentName:"p"},"ocf::firewall::firewall46")," declarations:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ocf::firewall::firewall46")," should generally be used in most cases. It\ninserts IPv4 and IPv6 iptables rules, but only adds the IPv6 iptables rule if\nthe host has a public IPv6 address. This prevents Puppet errors otherwise\noccurring due to IPv6 addresses not being resolved."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"firewall_multi")," should be used if IP addresses need to be manually specified\nin the firewall rule."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"ocf::firewall::firewall46")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"firewall_multi")," both internally use the\n",(0,l.kt)("inlineCode",{parentName:"li"},"firewall")," resource. Direct use of the ",(0,l.kt)("inlineCode",{parentName:"li"},"firewall")," resource should be avoided\nsince such resources wouldn't be subject to the ",(0,l.kt)("a",{parentName:"li",href:"https://github.com/ocf/puppet/blob/f3fdd5912a5dc5eafd9995412a9c5e85874dee31/manifests/site.pp#L50-L58"},"ordering constraints\ngenerally placed on firewall resources"),".")),(0,l.kt)("h2",{id:"debugging"},"Debugging"),(0,l.kt)("h3",{id:"iptables-commands"},(0,l.kt)("inlineCode",{parentName:"h3"},"iptables")," commands"),(0,l.kt)("p",null,"Note that all of the following commands need to be run as root."),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"iptables")," command allows you to inspect and debug IPv4 firewall rules:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"iptables -L"),": list firewall rules",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"iptables -L PUPPET-INPUT")," lists our input firewall rules"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"iptables -L PUPPET-OUTPUT")," lists our output firewall rules"),(0,l.kt)("li",{parentName:"ul"},"You can add a ",(0,l.kt)("inlineCode",{parentName:"li"},"-v")," option to list more detailed info (like statistics and\ninput/output interface)"),(0,l.kt)("li",{parentName:"ul"},"You can add a ",(0,l.kt)("inlineCode",{parentName:"li"},"-n")," option to show IP addresses and port numbers instead of\nhostnames and port names"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"iptables -S"),": dump firewall rules in machine-parseable format",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"Shows command line options used to add each rule"),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"iptables -S <chain>"),": dump firewall rules for a given chain"))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"iptables -F <chain>"),": deletes all of the rules in the given chain.",(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},"It seems that in some circumstances iptables may be buggy and not remove a\nrule that Puppet tells it to remove. This seems to be more likely to occur\nwhen the rule is the only rule in its chain. In this case, running\n",(0,l.kt)("inlineCode",{parentName:"li"},"iptables -F")," on that chain and subsequently rerunning Puppet will clear\nthe issue."))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"iptables -D <chain> <rulenum>"),": Deletes the ",(0,l.kt)("em",{parentName:"li"},"rulenum"),"-th rule from the given\nchain (i.e. ",(0,l.kt)("inlineCode",{parentName:"li"},"PUPPET-INPUT")," or ",(0,l.kt)("inlineCode",{parentName:"li"},"PUPPET-OUTPUT"),")."),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"iptables -A <chain> <rule-specification>"),": Adds the specified rule to the\ngiven chain. Note that this command is not particularly useful for the\n",(0,l.kt)("inlineCode",{parentName:"li"},"PUPPET-INPUT")," and ",(0,l.kt)("inlineCode",{parentName:"li"},"PUPPET-OUTPUT")," chains, since any added rules will be\npurged by Puppet.")),(0,l.kt)("p",null,"For IPv6 firewall rules, you need to use the ",(0,l.kt)("inlineCode",{parentName:"p"},"ip6tables")," command instead. The\ninvocation is the same as for ",(0,l.kt)("inlineCode",{parentName:"p"},"iptables"),"."),(0,l.kt)("p",null,"Iptables rules are not automatically persisted across reboots. In order for your\nchanges to iptables to be preserved across reboots, you need to additionally\nrun ",(0,l.kt)("inlineCode",{parentName:"p"},"service netfilter-persistent save"),". This is done automatically after\nevery Puppet run which results in iptables rules being modified, but if you\nmanually fiddle with iptables you may need to run it yourself."),(0,l.kt)("h3",{id:"disabling-firewalls-through-hiera"},"Disabling firewalls through hiera"),(0,l.kt)("p",null,"In an emergency, it's possible to effectively disable firewalling of input\ntraffic on a server by setting ",(0,l.kt)("inlineCode",{parentName:"p"},"ocf::firewall::reject_unrecognized_input")," to\n",(0,l.kt)("inlineCode",{parentName:"p"},"false")," in that server's hieradata. Turning on this option causes the rules in\nthe PUPPET-INPUT chain which reject traffic to be deleted, effectively disabling\nthe firewall's function of filtering input packets."),(0,l.kt)("p",null,"An analogous kill switch does not currently exist for output-traffic\nfirewalling, but can be easily added."))}c.isMDXComponent=!0}}]);