"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[1150],{3905:(e,a,n)=>{n.d(a,{Zo:()=>l,kt:()=>f});var t=n(7294);function r(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function c(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);a&&(t=t.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?c(Object(n),!0).forEach((function(a){r(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function i(e,a){if(null==e)return{};var n,t,r=function(e,a){if(null==e)return{};var n,t,r={},c=Object.keys(e);for(t=0;t<c.length;t++)n=c[t],a.indexOf(n)>=0||(r[n]=e[n]);return r}(e,a);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(t=0;t<c.length;t++)n=c[t],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=t.createContext({}),u=function(e){var a=t.useContext(s),n=a;return e&&(n="function"==typeof e?e(a):o(o({},a),e)),n},l=function(e){var a=u(e.components);return t.createElement(s.Provider,{value:a},e.children)},p={inlineCode:"code",wrapper:function(e){var a=e.children;return t.createElement(t.Fragment,{},a)}},d=t.forwardRef((function(e,a){var n=e.components,r=e.mdxType,c=e.originalType,s=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),d=u(n),f=r,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||c;return n?t.createElement(m,o(o({ref:a},l),{},{components:n})):t.createElement(m,o({ref:a},l))}));function f(e,a){var n=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var c=n.length,o=new Array(c);o[0]=d;var i={};for(var s in a)hasOwnProperty.call(a,s)&&(i[s]=a[s]);i.originalType=e,i.mdxType="string"==typeof e?e:r,o[1]=i;for(var u=2;u<c;u++)o[u]=n[u];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7775:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>i,toc:()=>u});var t=n(7462),r=(n(7294),n(3905));const c={title:"checkacct: find accounts by full name"},o=void 0,i={unversionedId:"staff/scripts/checkacct",id:"staff/scripts/checkacct",title:"checkacct: find accounts by full name",description:"Introduction",source:"@site/docs/staff/scripts/checkacct.md",sourceDirName:"staff/scripts",slug:"/staff/scripts/checkacct",permalink:"/docs/staff/scripts/checkacct",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/staff/scripts/checkacct.md",tags:[],version:"current",frontMatter:{title:"checkacct: find accounts by full name"},sidebar:"tutorialSidebar",previous:{title:"check: get details about an OCF user",permalink:"/docs/staff/scripts/check"},next:{title:"chpass: reset a user's password",permalink:"/docs/staff/scripts/chpass"}},s={},u=[{value:"Introduction",id:"introduction",level:2},{value:"Usage",id:"usage",level:2}],l={toc:u};function p(e){let{components:a,...n}=e;return(0,r.kt)("wrapper",(0,t.Z)({},l,n,{components:a,mdxType:"MDXLayout"}),(0,r.kt)("h2",{id:"introduction"},"Introduction"),(0,r.kt)("p",null,"If a member does not know their account name, you can use this script to look\nit up."),(0,r.kt)("p",null,"Before recording an account request for a group with ",(0,r.kt)("a",{parentName:"p",href:"/docs/staff/scripts/approve"},"approve"),", check to see if the group already has an account. Be\nsure to use different forms and abbreviations of the group's name to maximize\nthe chance that a group will be found."),(0,r.kt)("p",null,"This script will search ",(0,r.kt)("a",{parentName:"p",href:"/docs/staff/backend/ldap"},"LDAP")," for case-insensitive\nmatches in any part of the full name or account name, including part of a word.\nFor example, ",(0,r.kt)("inlineCode",{parentName:"p"},"checkacct wa fel andy"),' will search for any account that has "wa"\n(as in waf), "fel" (as in Felix), and "andy" (as in Andy) in the full name\n(LDAP cn) or account name (LDAP uid).'),(0,r.kt)("h2",{id:"usage"},"Usage"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"$ checkacct wa fel andy\nLogin: waf                  Name: Felix Andy Wong\n\n$ checkacct dara\nLogin: darac                Name: Dara T. Chu\nLogin: laktalk              Name: Lakshmi Sridaran\nLogin: sby                  Name: Sanji Bandara Yapa\nLogin: angeloq              Name: Cesar Angelo Quindara\nLogin: jayasund             Name: Jayasree Padma Sundaram\nLogin: dpastor              Name: Dara Elana Pastor\nLogin: msiva                Name: Matheepan Sivagnanasundaram\nLogin: daraech              Name: Diana Darae Choe\nLogin: suchitha             Name: Suchitha Sundaram\nLogin: csavong              Name: Christindaravy Savong\nLogin: norac                Name: Nora Chandara\nLogin: salmabah             Name: Salma Bahadarakhann\nLogin: darabkin             Name: David Andrew Rabkin\nLogin: daradib              Name: Dara Adib\nLogin: akhilsun             Name: Akhil Sundararajan\nLogin: mdarabi              Name: ZARA MARISA DARABIFARD\nLogin: eeden                Name: Elana Dara Eden\n")))}p.isMDXComponent=!0}}]);