"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[8572],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>d});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),s=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},u=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,u=p(e,["components","mdxType","originalType","parentName"]),m=s(a),d=r,f=m["".concat(l,".").concat(d)]||m[d]||c[d]||i;return a?n.createElement(f,o(o({ref:t},u),{},{components:a})):n.createElement(f,o({ref:t},u))}));function d(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var s=2;s<i;s++)o[s]=a[s];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},2369:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>p,toc:()=>s});var n=a(7462),r=(a(7294),a(3905));const i={title:"Flask"},o=void 0,p={unversionedId:"services/web/flask",id:"services/web/flask",title:"Flask",description:"Note: These instructions are primarily intended for individual user accounts.",source:"@site/docs/services/web/flask.md",sourceDirName:"services/web",slug:"/services/web/flask",permalink:"/docs/services/web/flask",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/services/web/flask.md",tags:[],version:"current",frontMatter:{title:"Flask"},sidebar:"tutorialSidebar",previous:{title:"Django",permalink:"/docs/services/web/django"},next:{title:"Jekyll",permalink:"/docs/services/web/jekyll"}},l={},s=[{value:"Setting up a Flask project",id:"setting-up-a-flask-project",level:2},{value:"Debugging",id:"debugging",level:3}],u={toc:s};function c(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Note: These instructions are primarily intended for individual user accounts.\nIf you are using a group account, you may wish to consider\n",(0,r.kt)("a",{parentName:"strong",href:"/docs/services/webapps"},"apphosting")," instead.")),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://palletsprojects.com/p/flask/"},"Flask")," is a popular microframework for\nPython web development. Using it on the OCF servers requires only just a little\nextra configuration."),(0,r.kt)("h2",{id:"setting-up-a-flask-project"},"Setting up a Flask project"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make a new directory for your flask app in your home directory. You can name\nthis whatever you want, but we'll assume you named the directory ",(0,r.kt)("inlineCode",{parentName:"p"},"app"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"user@tsunami:~$ mkdir app\nuser@tsunami:~$ cd app\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make a virtualenv. This will allow you to run ",(0,r.kt)("inlineCode",{parentName:"p"},"pip install")," to install any\npython packages that you need that the OCF does not already have. The\nbenefit of having a virtualenv is that you can decide the dependencies you\nwant, without being tied to the OCF defaults:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"user@tsunami:~/app$ virtualenv -p python3 venv\nuser@tsunami:~/app$ venv/bin/pip install flask flup6\n")),(0,r.kt)("p",{parentName:"li"},"Feel free to install any other packages you need for your flask app at this\nstep too (or later on, that's cool too). If you have an existing flask app\nwith a ",(0,r.kt)("inlineCode",{parentName:"p"},"requirements.txt")," file, then run ",(0,r.kt)("inlineCode",{parentName:"p"},"venv/bin/pip install -r requirements.txt")," to install dependencies from that."),(0,r.kt)("p",{parentName:"li"},"For full details on how to use pip, see ",(0,r.kt)("a",{parentName:"p",href:"https://packaging.python.org/tutorials/installing-packages/#installing-from-pypi"},"the pip documentation"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a new python file (or directory) for your application logic. In this\ncase, we'll create a new directory named ",(0,r.kt)("inlineCode",{parentName:"p"},"myapp")," and make a new file within\nit named ",(0,r.kt)("inlineCode",{parentName:"p"},"app.py"),":"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"from flask import Flask\napp = Flask(__name__)\n\n@app.route('/')\ndef hello():\n    return 'Hello World!'\n\nif __name__ == '__main__':\n    app.run()\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create a new directory in your ",(0,r.kt)("inlineCode",{parentName:"p"},"~/public_html/")," directory for your flask\napplication. You can also just put these files directly in ",(0,r.kt)("inlineCode",{parentName:"p"},"~/public_html"),"\nif you want your site available directly under\n",(0,r.kt)("inlineCode",{parentName:"p"},"https://www.ocf.berkeley.edu/~user")," and you don't have any other sites:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-shell"},"user@tsunami:~$ mkdir ~/public_html/flask\n")),(0,r.kt)("p",{parentName:"li"},"For example, this path above will make your site available at\n",(0,r.kt)("inlineCode",{parentName:"p"},"https://www.ocf.berkeley.edu/~user/flask"),".")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create ",(0,r.kt)("inlineCode",{parentName:"p"},"~/public_html/flask/.htaccess")," with these contents:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-apacheconf"},'RewriteEngine On\nRewriteBase /\nRewriteCond %{REQUEST_FILENAME} !-f\n# Change "user" and "flask" to your username and whatever directory\n# name you made in public_html, respectively\nRewriteRule ^(.*)$ /~user/flask/run.fcgi/$1 [QSA,L]\n'))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Create ",(0,r.kt)("inlineCode",{parentName:"p"},"~/public_html/flask/run.fcgi")," with these contents:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-python"},"#!/home/u/us/user/app/venv/bin/python\nimport os\nimport sys\n\nsys.path.insert(0, os.path.expanduser('~/app'))\nfrom flup.server.fcgi import WSGIServer\nfrom myapp.app import app\n\nif __name__ == '__main__':\n    WSGIServer(app).run()\n")),(0,r.kt)("p",{parentName:"li"},"Make sure to replace the first line of ",(0,r.kt)("inlineCode",{parentName:"p"},"run.fcgi")," file with the actual path\nto your project's virtualenv Python. You can find it by running the command\n",(0,r.kt)("inlineCode",{parentName:"p"},"readlink -f ~/app/venv/bin/python"),"."),(0,r.kt)("p",{parentName:"li"},"Make sure to also replace ",(0,r.kt)("inlineCode",{parentName:"p"},"~/app")," (if you have a different path in your home\ndirectory) and ",(0,r.kt)("inlineCode",{parentName:"p"},"from myapp.app")," with the name of your Flask application that\nyou selected before (we used ",(0,r.kt)("inlineCode",{parentName:"p"},"myapp")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"app.py")," but you can use whatever\nyou want).")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Make the ",(0,r.kt)("inlineCode",{parentName:"p"},"run.fcgi")," file you just created executable with:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"user@tsunami:~$ chmod +x ~/public_html/flask/run.fcgi\n"))),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("p",{parentName:"li"},"Once your app has started running, changes you make to the Python code or\ntemplates won't take effect for a few hours. To apply changes immediately,\nthe webserver needs to see that the ",(0,r.kt)("inlineCode",{parentName:"p"},"run.fcgi")," file has changed. You can can\nchange the modification time of the ",(0,r.kt)("inlineCode",{parentName:"p"},"run.fcgi")," file to trigger a restart\nwith the command:"),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"user@tsunami:~$ touch ~/public_html/flask/run.fcgi\n")))),(0,r.kt)("h3",{id:"debugging"},"Debugging"),(0,r.kt)("p",null,"If you see an error page when trying to load your app, you may find the\nwebserver's logs useful. You can access them in the following locations:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"error log: ",(0,r.kt)("inlineCode",{parentName:"li"},"/opt/httpd/error.log")," (most useful)"),(0,r.kt)("li",{parentName:"ul"},"suexec log: ",(0,r.kt)("inlineCode",{parentName:"li"},"/opt/httpd/suexec.log")," (only useful in rare cases)")))}c.isMDXComponent=!0}}]);