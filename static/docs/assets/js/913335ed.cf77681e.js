"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[129],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>k});var n=a(7294);function i(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function r(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){i(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,i=function(e,t){if(null==e)return{};var a,n,i={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(i[a]=e[a]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(i[a]=e[a])}return i}var l=n.createContext({}),s=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):r(r({},t),e)),a},d=function(e){var t=s(e.components);return n.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),u=s(a),k=i,h=u["".concat(l,".").concat(k)]||u[k]||c[k]||o;return a?n.createElement(h,r(r({ref:t},d),{},{components:a})):n.createElement(h,r({ref:t},d))}));function k(e,t){var a=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=a.length,r=new Array(o);r[0]=u;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p.mdxType="string"==typeof e?e:i,r[1]=p;for(var s=2;s<o;s++)r[s]=a[s];return n.createElement.apply(null,r)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},1034:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var n=a(7462),i=(a(7294),a(3905));const o={title:"Backporting Debian packages"},r=void 0,p={unversionedId:"staff/procedures/backporting-packages",id:"staff/procedures/backporting-packages",title:"Backporting Debian packages",description:"It seems like we often either need a newer version of a package, or to apply",source:"@site/docs/staff/procedures/backporting-packages.md",sourceDirName:"staff/procedures",slug:"/staff/procedures/backporting-packages",permalink:"/docs/staff/procedures/backporting-packages",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/staff/procedures/backporting-packages.md",tags:[],version:"current",frontMatter:{title:"Backporting Debian packages"},sidebar:"tutorialSidebar",previous:{title:"Rename an account",permalink:"/docs/staff/procedures/accounts/renaming"},next:{title:"DMCA",permalink:"/docs/staff/procedures/dmca"}},l={},s=[{value:"Step 1: Find the package you want",id:"step-1-find-the-package-you-want",level:2},{value:"Step 2: Downloading the package",id:"step-2-downloading-the-package",level:2},{value:"Step 3: Install dependencies",id:"step-3-install-dependencies",level:2},{value:"Step 4: Make any changes (optional)",id:"step-4-make-any-changes-optional",level:2},{value:"Step 5: Update the version number using dch",id:"step-5-update-the-version-number-using-dch",level:2},{value:"Backports",id:"backports",level:3},{value:"Patched packages",id:"patched-packages",level:3},{value:"Step 6: Build the package",id:"step-6-build-the-package",level:2},{value:"Step 7: Upload to our apt repo and test",id:"step-7-upload-to-our-apt-repo-and-test",level:2}],d={toc:s};function c(e){let{components:t,...a}=e;return(0,i.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"It seems like we often either need a newer version of a package, or to apply\nour own patch to some package. We have ",(0,i.kt)("a",{parentName:"p",href:"https://apt.ocf.berkeley.edu/"},"an apt\nrepo")," to which we upload these packages."),(0,i.kt)("p",null,"There is a useful Debian wiki page\n",(0,i.kt)("a",{parentName:"p",href:"https://wiki.debian.org/SimpleBackportCreation"},"SimpleBackportCreation")," but\nwe'll cover everything you need to know here."),(0,i.kt)("p",null,"Additionally, some of the commands on this page are found in packages not\ntypically installed on OCF machines. In order of appearance on this page:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dget"),": Found in the ",(0,i.kt)("inlineCode",{parentName:"li"},"devscripts")," package"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dpkg-checkbuilddeps"),": Found in the ",(0,i.kt)("inlineCode",{parentName:"li"},"dpkg-dev")," package"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"mk-build-deps"),": Found in the ",(0,i.kt)("inlineCode",{parentName:"li"},"devscripts")," package"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dquilt"),": This is ",(0,i.kt)("a",{parentName:"li",href:"https://www.debian.org/doc/manuals/maint-guide/modify.en.html#quiltrc"},"an alias around ",(0,i.kt)("inlineCode",{parentName:"a"},"quilt")),", found in the ",(0,i.kt)("inlineCode",{parentName:"li"},"quilt")," package"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dch"),": Found in the ",(0,i.kt)("inlineCode",{parentName:"li"},"devscripts")," package"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"dpkg-buildpackage"),": Found in the ",(0,i.kt)("inlineCode",{parentName:"li"},"dpkg-dev")," package"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"scp"),": Found in the ",(0,i.kt)("inlineCode",{parentName:"li"},"openssh-client")," package")),(0,i.kt)("p",null,"Generally, it's a good idea to build packages in Docker containers so that any\nbuild dependencies or build tools are not left still installed after the\npackage is built. In total, you only generally need to run:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"sudo apt install packaging-dev debian-keyring devscripts equivs openssh-client\n")),(0,i.kt)("p",null,"to get started with building packages (",(0,i.kt)("inlineCode",{parentName:"p"},"packaging-dev")," installs a bunch of the\npackages above as dependencies). This is along with any build dependencies the\npackages you are working on might have, but this is discussed more later."),(0,i.kt)("h2",{id:"step-1-find-the-package-you-want"},"Step 1: Find the package you want"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Go to ",(0,i.kt)("a",{parentName:"p",href:"https://packages.debian.org/"},"packages.debian.org")," and find the\npackage you desire.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Find the package info page\n(",(0,i.kt)("a",{parentName:"p",href:"https://packages.debian.org/stretch/evince"},"example"),"), and make sure you're\non the correct distribution (select at the top-right, e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"stretch"),").")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},'From the sidebar on the right, select under "Download Source Package" the\nlink to the ',(0,i.kt)("inlineCode",{parentName:"p"},".dsc")," file. The URL should look something like:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"http://http.debian.net/debian/pool/main/e/evince/evince_3.14.2-1.dsc\n")))),(0,i.kt)("h2",{id:"step-2-downloading-the-package"},"Step 2: Downloading the package"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Log on to a system which has the release you want to eventually install the\npackage on. (For example, if you're backporting a package from buster to\nstretch, you should do these steps ",(0,i.kt)("em",{parentName:"p"},"on stretch"),".) Generally, a Docker\ncontainer works quite well because any extra build dependencies you install\nwill not remain on the system once the package is built. pbuilder can also be\nused to a similar effect.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Using the ",(0,i.kt)("inlineCode",{parentName:"p"},".dsc")," link from above, download the source package:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"dget -x http://http.debian.net/debian/pool/main/e/evince/evince_3.14.2-1.dsc\n")))),(0,i.kt)("h2",{id:"step-3-install-dependencies"},"Step 3: Install dependencies"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Enter the new directory and run ",(0,i.kt)("inlineCode",{parentName:"li"},"dpkg-checkbuilddeps"),", and install any\ndependencies that are missing. If you'd like to install missing dependencies\nautomatically, you can use ",(0,i.kt)("inlineCode",{parentName:"li"},"sudo mk-build-deps -ir"),".")),(0,i.kt)("h2",{id:"step-4-make-any-changes-optional"},"Step 4: Make any changes (optional)"),(0,i.kt)("p",null,"If you're patching the package (and not just backporting), here is where you\nmake your changes. You should first apply all the patches (",(0,i.kt)("inlineCode",{parentName:"p"},"dquilt push -a"),"),\nthen use ",(0,i.kt)("inlineCode",{parentName:"p"},"dquilt"),"/",(0,i.kt)("inlineCode",{parentName:"p"},"quilt")," to create your patch. This can be done by running\n",(0,i.kt)("inlineCode",{parentName:"p"},"dquilt new <patch-name>.patch")," to start a patch, ",(0,i.kt)("inlineCode",{parentName:"p"},"dquilt edit <file>"),", and\nthen ",(0,i.kt)("inlineCode",{parentName:"p"},"dquilt refresh")," to generate the patch file from the modified file. You\ncan also just modify the source if you don't care about quality, but you\n",(0,i.kt)("em",{parentName:"p"},"should")," ensure all the Debian patches are applied first using ",(0,i.kt)("inlineCode",{parentName:"p"},"dquilt"),"."),(0,i.kt)("h2",{id:"step-5-update-the-version-number-using-dch"},"Step 5: Update the version number using dch"),(0,i.kt)("p",null,"Decide on your version number, using one of the categories below:"),(0,i.kt)("h3",{id:"backports"},"Backports"),(0,i.kt)("p",null,"For backports, we like to add append ",(0,i.kt)("inlineCode",{parentName:"p"},"~ocfN")," to the end, where ",(0,i.kt)("inlineCode",{parentName:"p"},"N")," is an\ninteger starting at 1. The final version might look like ",(0,i.kt)("inlineCode",{parentName:"p"},"4.3.0-1~ocf1"),"."),(0,i.kt)("p",null,"Use a command like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"dch --local ~ocf --distribution stretch-backports 'Backported by OCF for stretch.'\n")),(0,i.kt)("p",null,"The squiggle makes your backport inferior to the official package, so that it\nwill be replaced during an upgrade. This is desired, since with a backport no\nchanges have been made to the package itself, just a newer version brought to\nan older distribution version."),(0,i.kt)("h3",{id:"patched-packages"},"Patched packages"),(0,i.kt)("p",null,"For packages we apply patches to, we like to append ",(0,i.kt)("inlineCode",{parentName:"p"},"ocfN")," to the end. This is\nsimilar to what Ubuntu does for packages it patches from Debian. The final\nversion might look like ",(0,i.kt)("inlineCode",{parentName:"p"},"1.3.1-7ocf1"),"."),(0,i.kt)("p",null,"Use a command like:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"dch --local ocf --distribution stretch 'Patched by OCF to not delete $HOME on login.'\n")),(0,i.kt)("p",null,"Unlike backporting, this version number means that upgrades will not affect this\npackage, since it will not be inferior to any new versions pushed to Debian\npackage repos. This is usually desired because the patch applied should not be\nautomatically overwritten by any other changes to the package."),(0,i.kt)("h2",{id:"step-6-build-the-package"},"Step 6: Build the package"),(0,i.kt)("p",null,"Build the package with ",(0,i.kt)("inlineCode",{parentName:"p"},"dpkg-buildpackage -us -uc -sa"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},".deb")," file will\npop out in your parent directory along with some other files to send to the apt\nrepo (the original source, any modifications, the changelog, etc.)."),(0,i.kt)("h2",{id:"step-7-upload-to-our-apt-repo-and-test"},"Step 7: Upload to our apt repo and test"),(0,i.kt)("p",null,"If this is something that we will be building often (e.g. ocfweb or ocflib),\nyou probably want to set it up inside Jenkins to automatically test and\n",(0,i.kt)("a",{parentName:"p",href:"https://jenkins.ocf.berkeley.edu/job/upload-changes/"},"upload to apt"),"."),(0,i.kt)("p",null,"For one-off uploads:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Copy all the necessary files to ",(0,i.kt)("inlineCode",{parentName:"p"},"apt")," (currently ",(0,i.kt)("inlineCode",{parentName:"p"},"fallingrocks"),"):"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"scp *.tar.gz *.tar.bz2 *.debian.tar.xz *.dsc *.changes *.deb you@apt:/tmp/yourpackage\n")),(0,i.kt)("p",{parentName:"li"},"Generally putting these in a new directory in ",(0,i.kt)("inlineCode",{parentName:"p"},"/tmp")," is a good way to go,\nsince if you put them in your home directory, the ",(0,i.kt)("inlineCode",{parentName:"p"},"ocfapt")," user will not be\nable to read them.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Include the package files in the suitable distribution. If this is just a\nbackport (no patches), use ",(0,i.kt)("inlineCode",{parentName:"p"},"<dist>-backports"),", otherwise just use ",(0,i.kt)("inlineCode",{parentName:"p"},"<dist>"),":"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"sudo -u ocfapt /opt/apt/bin/reprepro include <dist> /tmp/mypackage.changes\n")),(0,i.kt)("p",{parentName:"li"},"For more options for ",(0,i.kt)("inlineCode",{parentName:"p"},"reprepro"),", see the comments at the top of\n",(0,i.kt)("inlineCode",{parentName:"p"},"/opt/apt/bin/reprepro"),", which is a wrapper script around the ",(0,i.kt)("inlineCode",{parentName:"p"},"reprepro"),"\ncommand to avoid messing up paths and permissions.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Test the package by installing it on one host and see if it behaves how you\nwould expect. Make sure to run ",(0,i.kt)("inlineCode",{parentName:"p"},"sudo apt update")," first so that the host you\nare testing on knows about the package you have added."))))}c.isMDXComponent=!0}}]);