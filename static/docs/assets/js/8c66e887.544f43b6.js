"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4543],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>d});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var u=r.createContext({}),p=function(e){var n=r.useContext(u),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(u.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},f=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,u=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),f=p(t),d=a,g=f["".concat(u,".").concat(d)]||f[d]||l[d]||o;return t?r.createElement(g,i(i({ref:n},c),{},{components:t})):r.createElement(g,i({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=f;var s={};for(var u in n)hasOwnProperty.call(n,u)&&(s[u]=n[u]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var p=2;p<o;p++)i[p]=t[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}f.displayName="MDXCreateElement"},9521:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>i,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var r=t(7462),a=(t(7294),t(3905));const o={title:"signat: check signatory status"},i=void 0,s={unversionedId:"staff/scripts/signat",id:"staff/scripts/signat",title:"signat: check signatory status",description:"Introduction",source:"@site/docs/staff/scripts/signat.md",sourceDirName:"staff/scripts",slug:"/staff/scripts/signat",permalink:"/docs/staff/scripts/signat",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/staff/scripts/signat.md",tags:[],version:"current",frontMatter:{title:"signat: check signatory status"},sidebar:"tutorialSidebar",previous:{title:"pdf-open: unf*&^ bad PDFs if they won't print right",permalink:"/docs/staff/scripts/pdf-open"},next:{title:"sorry: disable an OCF account",permalink:"/docs/staff/scripts/sorry"}},u={},p=[{value:"Introduction",id:"introduction",level:2},{value:"How it works",id:"how-it-works",level:2},{value:"Usage",id:"usage",level:2}],c={toc:p};function l(e){let{components:n,...t}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"signat")," script is used to look up the signatory status of people and\nstudent groups. This allows us to verify that the people who email us or come\nin to ",(0,a.kt)("a",{parentName:"p",href:"/staff-hours"},"staff hours")," are really signatories for their group, and\nit also gives all the information needed to create group accounts with\n",(0,a.kt)("a",{parentName:"p",href:"/docs/staff/scripts/approve"},"approve"),"."),(0,a.kt)("h2",{id:"how-it-works"},"How it works"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"signat")," is an interface to the ",(0,a.kt)("a",{parentName:"p",href:"github.com/ocf/ocflib"},(0,a.kt)("inlineCode",{parentName:"a"},"ocflib"))," functions to query the\n",(0,a.kt)("a",{parentName:"p",href:"https://saappiis4.sait-west.berkeley.edu/StudentGroupServiceV2/service.asmx"},"CalLink API")," for group signatories. ",(0,a.kt)("inlineCode",{parentName:"p"},"ocflib")," is also used to look\nup UIDs and OIDs in OCF ",(0,a.kt)("a",{parentName:"p",href:"/docs/staff/backend/ldap"},"LDAP")," and names in the\nuniversity's ",(0,a.kt)("a",{parentName:"p",href:"https://wikihub.berkeley.edu/display/calnet/LDAP+Directory+Service"},"LDAP directory service"),"."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"There are several different types of queries available through ",(0,a.kt)("inlineCode",{parentName:"p"},"signat"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ signat -h\nusage: signat [-h] {uid,oid,user,name,group} ...\n\nFind active student groups and signatories\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nsubcommands:\n\n  {uid,oid,user,name,group}\n    uid                 Look up the signatory status of a person by CalNet UID\n    oid                 Look up the signatories of a group by CalLink OID\n    user                Look up the signatory status of an OCF user\n    name                Look up the signatory status of a person by name\n    group               Look up the signatories of a group by group name\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"group")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"name")," are the easiest queries to use when a group or signatory\ndoesn't already have an OCF account. These perform a keyword search for people\nor groups by name."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ signat name N Impicciche\nSearching for people... Found 1 entry.\nSearching for signatories...\n\nNICHOLAS DANIEL IMPICCICHE (1032668)\n====================================\nGroup                    Accounts                       OID\n-----------------------  ---------------------------  -----\nOpen Computing Facility  decal, linux, ggroup, group  46187\n\n$ signat group free\nSearching for groups... Found 2 entries.\nSearching for signatories...\n\nFree Ventures (91915)\nGroup accounts: free\n=====================\nSignatory                   UID\n----------------------  -------\nKEYAN SARRAFZADEH       1004456\nDAMINI SATIJA            995579\nJasmine Chiman STOY      995773\nAMRIT MAHADEVAN AYALUR  1027142\n\nStudents for a Free Tibet at Berkeley (46707)\nGroup accounts: n/a\n=============================================\nSignatory               UID\n------------------  -------\nSANGMO TENZIN ARYA  1035554\nDORJEE TASHI        1110958\nTENZING DOLMA       1027935\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"user")," looks up an OCF account and prints the signatories for a group account\nor the signatory status of an individual account."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ signat user nickimp\nNICHOLAS DANIEL IMPICCICHE (1032668)\n====================================\nGroup                    Accounts                       OID\n-----------------------  ---------------------------  -----\nOpen Computing Facility  decal, linux, ggroup, group  46187\n\n$ signat user free\nFree Ventures (91915)\nGroup accounts: free\n=====================\nSignatory                   UID\n----------------------  -------\nKEYAN SARRAFZADEH       1004456\nDAMINI SATIJA            995579\nJasmine Chiman STOY      995773\nAMRIT MAHADEVAN AYALUR  1027142\n")),(0,a.kt)("p",null,"The other two queries, ",(0,a.kt)("inlineCode",{parentName:"p"},"uid")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"oid"),", don't offer much convenience, but\ncomplete the spectrum of useful queries."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"$ signat uid 1032668\nNICHOLAS DANIEL IMPICCICHE (1032668)\n====================================\nGroup                    Accounts                       OID\n-----------------------  ---------------------------  -----\nOpen Computing Facility  decal, linux, ggroup, group  46187\n\n$ signat oid 91915\nFree Ventures (91915)\nGroup accounts: free\n=====================\nSignatory                   UID\n----------------------  -------\nKEYAN SARRAFZADEH       1004456\nDAMINI SATIJA            995579\nJasmine Chiman STOY      995773\nAMRIT MAHADEVAN AYALUR  1027142\n")))}l.isMDXComponent=!0}}]);