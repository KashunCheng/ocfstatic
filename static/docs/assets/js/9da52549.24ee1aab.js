"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[6663],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||o;return n?r.createElement(h,i(i({ref:t},u),{},{components:n})):r.createElement(h,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<o;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9084:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const o={title:"Configuring virtual hosting"},i=void 0,l={unversionedId:"staff/procedures/vhost",id:"staff/procedures/vhost",title:"Configuring virtual hosting",description:"Policy checklist",source:"@site/docs/staff/procedures/vhost.md",sourceDirName:"staff/procedures",slug:"/staff/procedures/vhost",permalink:"/docs/staff/procedures/vhost",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/staff/procedures/vhost.md",tags:[],version:"current",frontMatter:{title:"Configuring virtual hosting"},sidebar:"tutorialSidebar",previous:{title:"User disk quotas",permalink:"/docs/staff/procedures/user-quotas"},next:{title:"Manually creating XMPP accounts",permalink:"/docs/staff/procedures/xmpp"}},s={},p=[{value:"Policy checklist",id:"policy-checklist",level:2},{value:"Enabling virtual hosting",id:"enabling-virtual-hosting",level:2},{value:"Web",id:"web",level:3},{value:"Mail (if requested) {mail}",id:"mail-if-requested-mail",level:3},{value:"Application hosting",id:"application-hosting",level:3}],u={toc:p};function c(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"policy-checklist"},"Policy checklist"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Website developed, not a placeholder"),(0,a.kt)("li",{parentName:"ul"},"Website hosted substantially on the OCF"),(0,a.kt)("li",{parentName:"ul"},"For RSOs, website has required university disclaimer on every page"),(0,a.kt)("li",{parentName:"ul"},"Website has hosted by OCF banner on the front page that is noticeable without\nundue effort and links to the OCF home page"),(0,a.kt)("li",{parentName:"ul"},"Request is made by a registered and active student organization in CalLink\n(LEAD Center), request is sponsored by an ",(0,a.kt)("a",{parentName:"li",href:"https://compliance.berkeley.edu/delegation/principles"},"administrative\nofficial"),", or request\nis for the account of a faculty or staff member"),(0,a.kt)("li",{parentName:"ul"},"For RSOs, request is made by a signatory of the group in question (use\n",(0,a.kt)("inlineCode",{parentName:"li"},"signat group <group>")," to see signatories)"),(0,a.kt)("li",{parentName:"ul"},"For faculty/staff, the requestor has already obtained a domain from e.g.\ntheir department"),(0,a.kt)("li",{parentName:"ul"},"Account does not already have a virtual host, or has an exception from a Site\nManager"),(0,a.kt)("li",{parentName:"ul"},"For RSOs, domain name complies with ",(0,a.kt)("a",{parentName:"li",href:"https://lead.berkeley.edu/wp-content/uploads/2014/12/student-org-domain-guidelines.pdf"},"LEAD Center guidelines"),". In\nparticular, requested domain name is sufficiently similar to their official\nname and wouldn't potentially be confused with a university department."),(0,a.kt)("li",{parentName:"ul"},"For non-berkeley.edu domains, domain name has been approved by a (D)GM or\n(D)SM. (We wish to keep the number of these domains under check to limit the\nnumber of non-berkeley.edu domain owners we have to contact when our web\nserver or mail server DNS changes.)")),(0,a.kt)("h2",{id:"enabling-virtual-hosting"},"Enabling virtual hosting"),(0,a.kt)("h3",{id:"web"},"Web"),(0,a.kt)("p",null,"Edit the file ",(0,a.kt)("inlineCode",{parentName:"p"},"~staff/vhost/vhost.conf"),", adding a new line. The format is\ndocumented at the top."),(0,a.kt)("p",null,"This takes effect at the top of every hour when a cronjob runs. HTTPS takes\nabout an additional hour to take effect (for the first hour, it will be\nHTTP-only)."),(0,a.kt)("p",null,"Next, request the following DNS records from the ",(0,a.kt)("a",{parentName:"p",href:"https://ucb.service-now.com/kb_view.do?sysparm_article=KBT0012470"},"University\nhostmaster"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"hostname.Berkeley.EDU. IN A 169.229.226.23\nhostname.Berkeley.EDU. IN AAAA 2607:f140:8801::1:23\nhostname.Berkeley.EDU. IN MX 5 anthrax.OCF.Berkeley.EDU.\n")),(0,a.kt)("p",null,"Use the domain requested by the group in place of ",(0,a.kt)("inlineCode",{parentName:"p"},"hostname"),". We have a\n",(0,a.kt)("a",{parentName:"p",href:"https://templates.ocf.berkeley.edu/#hostmaster-new-domain"},"reusable email\ntemplate")," for making\nnew DNS requests."),(0,a.kt)("h3",{id:"mail-if-requested-mail"},"Mail (if requested) {mail}"),(0,a.kt)("p",null,"Edit the file ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/ocf/etc/blob/master/configs/vhost-mail.conf"},"https://github.com/ocf/etc/blob/master/configs/vhost-mail.conf"),", adding a new line for the group.\nThe format is simply:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"groupname domainname\n")),(0,a.kt)("p",null,"This immediately takes effect, allowing the group to [","[edit their email config|vhost_mail]","] (and the mail server will start accepting incoming/outgoing\nmail), but you still need to update the DNS so that they can actually receive\nmail."),(0,a.kt)("p",null,"We request the same DNS records for mail hosting as for web hosting. First,\ncheck if any DNS records already exist with"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"dig hostname.berkeley.edu [A|AAAA|MX]\n")),(0,a.kt)("p",null,"for IPv4/IPv6/mail records, respectively. If they have all the records from the\nprevious section, you don't have to do anything else."),(0,a.kt)("p",null,"If not, make the same request to the University hostmaster as in the previous\nsection. If you see this record:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"hostname.Berkeley.EDU. IN CNAME death.OCF.Berkeley.EDU.\n")),(0,a.kt)("p",null,"then include in your request to the hostmaster that it be dropped."),(0,a.kt)("p",null,"We have a\n",(0,a.kt)("a",{parentName:"p",href:"https://templates.ocf.berkeley.edu/#hostmaster-add-mail"},"reusable email\ntemplate")," for making\nDNS mail requests for groups that have old ",(0,a.kt)("inlineCode",{parentName:"p"},"CNAME")," records."),(0,a.kt)("h3",{id:"application-hosting"},"Application hosting"),(0,a.kt)("p",null,"The group website should be reasonably developed (can be offsite during review\nonly for this request) before approving it."),(0,a.kt)("p",null,"You will need a ",(0,a.kt)("inlineCode",{parentName:"p"},"/admin")," principal to modify apphosting entries."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Add the group account to the ocfapphost LDAP group:"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"$ ldapvi cn=ocfapphost\nmemberUid: ggroup\nmemberUid: GROUP_USERNAME\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Add apphost entry: edit ",(0,a.kt)("inlineCode",{parentName:"p"},"~staff/vhost/vhost-app.conf"),". The file syntax is"),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre"},"account vhost_name socket_name ssl_name\n")),(0,a.kt)("p",{parentName:"li"},"The config file contains examples and more documentation.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"Wait for cronjob to update configurations (runs every 10 minutes)."))),(0,a.kt)("p",null,"Once the cronjob completes, the application will be available at:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"VHOST_NAME-berkeley-edu.apphost.ocf.berkeley.edu\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"VHOST_NAME")," is the configured name from above."),(0,a.kt)("p",null,"Once the website is developed and meets policy checklist, request the following\nDNS record from the ",(0,a.kt)("a",{parentName:"p",href:"https://ucb.service-now.com/kb_view.do?sysparm_article=KBT0012470"},"University hostmaster"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"hostname.Berkeley.EDU. IN A 169.229.226.49\nhostname.Berkeley.EDU. IN AAAA 2607:f140:8801::1:49\nhostname.Berkeley.EDU. IN MX 5 anthrax.OCF.Berkeley.EDU.\n")),(0,a.kt)("p",null,"Remember to request that any existing records be dropped as well. You can check\nfor records with ",(0,a.kt)("inlineCode",{parentName:"p"},"dig hostname.berkeley.edu [A|AAAA|MX]"),". The nginx running on\napphosting server will return a ",(0,a.kt)("inlineCode",{parentName:"p"},"502 Bad Gateway")," or actual content if the\napphost is configured properly, and a ",(0,a.kt)("inlineCode",{parentName:"p"},"403 Forbidden")," otherwise."))}c.isMDXComponent=!0}}]);