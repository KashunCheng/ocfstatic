"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[820],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=p(n),h=i,m=u["".concat(l,".").concat(h)]||u[h]||d[h]||r;return n?a.createElement(m,s(s({ref:t},c),{},{components:n})):a.createElement(m,s({ref:t},c))}));function h(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=u;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var p=2;p<r;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},4135:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>p});var a=n(7462),i=(n(7294),n(3905));const r={title:"Kerberos"},s=void 0,o={unversionedId:"staff/backend/kerberos",id:"staff/backend/kerberos",title:"Kerberos",description:"Introduction",source:"@site/docs/staff/backend/kerberos.md",sourceDirName:"staff/backend",slug:"/staff/backend/kerberos",permalink:"/docs/staff/backend/kerberos",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/staff/backend/kerberos.md",tags:[],version:"current",frontMatter:{title:"Kerberos"},sidebar:"tutorialSidebar",previous:{title:"Jenkins",permalink:"/docs/staff/backend/jenkins"},next:{title:"Kubernetes",permalink:"/docs/staff/backend/kubernetes"}},l={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Security advantages",id:"security-advantages",level:3},{value:"Usability advantages",id:"usability-advantages",level:3},{value:"Versions",id:"versions",level:2},{value:"Terminology",id:"terminology",level:2},{value:"Commands",id:"commands",level:2},{value:"Adding privileges for users",id:"adding-privileges-for-users",level:2},{value:"How does it actually work?",id:"how-does-it-actually-work",level:2}],c={toc:p};function d(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,"Kerberos is a network authentication system that is designed for client to\nserver communication over a (potentially) insecure network, where data can be\neavesdropped on, and addresses can be faked. It has several security and\nusability advantages over using password-based authentication over the network."),(0,i.kt)("h3",{id:"security-advantages"},"Security advantages"),(0,i.kt)("p",null,"One major security advantage of using Kerberos is that if a ticket is stolen\nfrom a host, it will expire, so damage is minimized compared to being able to\nsteal a password or long-lived ticket. Kerberos also assumes that the network\nthat is being used for communication could be compromised and has malicious\nusers who could be listening to network traffic and stealing any data sent from\nmachine to machine. To combat this, Kerberos does not send any data like\nplaintext passwords or keys by themselves across the network that could be used\nfor attacks. Instead, it uses tickets, and encrypts data sent to clients and\nservers with a key that only that machine can read."),(0,i.kt)("h3",{id:"usability-advantages"},"Usability advantages"),(0,i.kt)("p",null,"Kerberos makes passwordless login easy, since after the first password is\ninput, a ticket can be used for future logins instead of having to type the\nsame password again and go through the whole authentication process a second\ntime. Keep in mind that all of the authentication will have to be done every 10\nhours, as tickets do expire, but passwords have to be typed far less with\nKerberos in place. Tickets are invalidated on logout, so that makes sure that\nsomeone can't steal a ticket and use it after you have left, as a little added\nsecurity."),(0,i.kt)("h2",{id:"versions"},"Versions"),(0,i.kt)("p",null,"There are two major free versions of Kerberos: MIT and Heimdal Kerberos. At the\nOCF, we use Heimdal Kerberos; if you look up documentation, it might instead\nbe for the MIT version, so be careful to make sure the commands work. Kerberos\nalso has 2 main versions that are still used: version 4 and version 5. Version\n5 fixes a lot of the security and design flaws of version 4, so we use version\n5 of the protocol."),(0,i.kt)("h2",{id:"terminology"},"Terminology"),(0,i.kt)("p",null,"Unfortunately, Kerberos is a complicated protocol that involves a lot of\ntechnical jargon. Here's a bunch of different terms that you might run into\nwhen reading about or working on Kerberos and an attempt to explain what they\nmean:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"KDC")," (",(0,i.kt)("strong",{parentName:"p"},"K"),"ey ",(0,i.kt)("strong",{parentName:"p"},"D"),"istribution ",(0,i.kt)("strong",{parentName:"p"},"C"),"enter): The central server that issues\ntickets for Kerberos communication and stores all users' keys. If the KDC is\ncompromised, you are going to have a very bad time and ",(0,i.kt)("a",{parentName:"p",href:"https://xkcd.com/1133/"},"will not go to space\ntoday"),". Our current KDC is firestorm, but that could change in\nthe future, as servers are moved around or rebuilt.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Realm"),": A kerberos domain, usually identified with the domain name in all\ncaps (e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"OCF.BERKELEY.EDU"),"). Two hosts are in the same realm if they share\nsome kind of secret (password or key). The default realm is specified in\n",(0,i.kt)("inlineCode",{parentName:"p"},"/etc/krb5.conf"),", alongside the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ocf/puppet/blob/17bc94b395e254529d97c84fb044f76931439fd7/modules/ocf/files/auth/krb5.conf#L27"},"location of the KDC and admin server")," (",(0,i.kt)("inlineCode",{parentName:"p"},"kerberos.ocf.berkeley.edu")," in our case). Cross-realm\nauthentication is possible, but is thankfully not something we need to do, as\nit significantly complicates things.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Principal"),": A Kerberos principal is essentially a name used to refer to an\nentry in the Kerberos database. Each principal is associated with a user,\nhost, or service of a realm. All principals shown below are followed by\n",(0,i.kt)("inlineCode",{parentName:"p"},"@OCF.BERKELEY.EDU")," since it is the realm the OCF uses."),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"User"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"[user]")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"[user]/[instance]")," e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"jvperrin")," or\n",(0,i.kt)("inlineCode",{parentName:"p"},"mattmcal/root"),". Used for user logins or for user privileges such as\nediting LDAP or running commands with ",(0,i.kt)("inlineCode",{parentName:"p"},"sudo"),".")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Host"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"host/[hostname]")," e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"host/supernova.ocf.berkeley.edu"),". Used by\nKerberos to allow clients to verify they are communicating with the correct\nhost. For instance, when using SSH to connect to a host, that hosts's\nprincipal is looked up to make sure that you are connecting to the right\nhost and that the host is not actually some other malicious host.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Service"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"[service]/[hostname]")," e.g. ",(0,i.kt)("inlineCode",{parentName:"p"},"ldap/firestorm.ocf.berkeley.edu"),".\nUsed to enable Kerberos authentication with a service running on a\nparticular host, such as ",(0,i.kt)("inlineCode",{parentName:"p"},"http"),", which (for instance) enables logins to RT,\nor ",(0,i.kt)("inlineCode",{parentName:"p"},"smtp"),", which allows email authentication.")))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Ticket"),": Tickets are issued by the TGS (see below) to clients. Tickets\nhave an expiration time, which is set to the default of 10 hours after being\nissued.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Keytab"),": A keytab is essentially the equivalent of a password, but one\nthat can be used easily by a script. If someone has read access to a keytab,\nthey can retrieve all the keys in it, so be very careful what permissions are\nset on keytabs.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"TGT")," (",(0,i.kt)("strong",{parentName:"p"},"T"),"icket ",(0,i.kt)("strong",{parentName:"p"},"G"),"ranting ",(0,i.kt)("strong",{parentName:"p"},"T"),"icket): A special ticket that is used\nfor communication between the client machine and the KDC.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"TGS")," (",(0,i.kt)("strong",{parentName:"p"},"T"),"icket ",(0,i.kt)("strong",{parentName:"p"},"G"),"ranting ",(0,i.kt)("strong",{parentName:"p"},"S"),"ervice): Usually the same as the KDC,\nthe job of the TGS is to grant tickets (see above) for different network\nservices.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"GSS-API"),": The API used by different applications to be able to\nauthenticate with Kerberos.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"SASL"),": An authentication layer that many different applications can use."))),(0,i.kt)("h2",{id:"commands"},"Commands"),(0,i.kt)("p",null,"All conveniently prefixed with the letter ",(0,i.kt)("inlineCode",{parentName:"p"},"k"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"kinit"),": Used to get a ticket, for instance to be able to edit LDAP, or run\ncommands that need ",(0,i.kt)("inlineCode",{parentName:"p"},"sudo")," (using the ",(0,i.kt)("inlineCode",{parentName:"p"},"[user]/root")," principal). For instance,\nto edit your own LDAP entry, run ",(0,i.kt)("inlineCode",{parentName:"p"},"kinit [user]/admin ldapvi uid=[user]")," to\nauthenticate using your ",(0,i.kt)("inlineCode",{parentName:"p"},"admin")," Kerberos principal and then run ",(0,i.kt)("inlineCode",{parentName:"p"},"ldapvi"),". The\ndefault principal requested is your base user principal (",(0,i.kt)("inlineCode",{parentName:"p"},"[user]@[realm]"),").\nAny commands put after ",(0,i.kt)("inlineCode",{parentName:"p"},"kinit")," will be ran as usual with the requested\ncredentials.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"klist"),": Shows all current tickets held with issued and expiration datetimes\nand the principal that each ticket corresponds to.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"kadmin"),": Administration utility for Kerberos to make changes to the Kerberos\ndatabase, either locally (with ",(0,i.kt)("inlineCode",{parentName:"p"},"-l"),"), or remotely by connecting to the KDC.\nCan retrieve information about principals, modify principal attributes,\nchange principal passwords, show privileges allowed, etc.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"kdestroy"),": Remove a principal or ticket file. This is essentially the\nopposite of ",(0,i.kt)("inlineCode",{parentName:"p"},"kinit"),", so it invalidates tickets you have, logging you out from\nKerberos. This is automatically run on logout to invalidate any lingering\ntickets.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"ktutil"),": Very useful command that has a variety of subcommands for managing\nkeytabs. Can be used to list credentials available in a keytab, add keys to a\nkeytab, remove keys, etc.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"kpasswd"),": Used to change Kerberos passwords.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"kimpersonate"),": Used for impersonating another user using their keytab."))),(0,i.kt)("p",null,"There are more commands, but they aren't used so often, and can be searched if\nneeded."),(0,i.kt)("h2",{id:"adding-privileges-for-users"},"Adding privileges for users"),(0,i.kt)("p",null,"To add privileges for users, first create a new principal for them to use. As\npart of this process, the user will have to give each principal a password. The\npassword can be the same or different from their main user principal, but they\nwill have to enter it every time they want to edit LDAP or run commands with\n",(0,i.kt)("inlineCode",{parentName:"p"},"sudo"),". To create a new principal, run ",(0,i.kt)("inlineCode",{parentName:"p"},"kadmin add [user]/[instance]"),", where\n",(0,i.kt)("inlineCode",{parentName:"p"},"[instance]")," is either ",(0,i.kt)("inlineCode",{parentName:"p"},"root")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"admin"),". The ",(0,i.kt)("inlineCode",{parentName:"p"},"[user]/root")," principal is used\nwhen running ",(0,i.kt)("inlineCode",{parentName:"p"},"sudo")," commands and for changing user passwords, whereas the\n",(0,i.kt)("inlineCode",{parentName:"p"},"[user]/admin")," principal is used mainly for modifying LDAP."),(0,i.kt)("p",null,"Next, to give the principal actual privileges, add the principals and\nprivileges assigned to the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ocf/puppet/blob/master/modules/ocf_kerberos/files/kadmind.acl"},"kadmind.acl file")," used by Puppet. Notice that\nthe ",(0,i.kt)("inlineCode",{parentName:"p"},"all")," privilege does not actually give ",(0,i.kt)("em",{parentName:"p"},"all")," privileges, since the\n",(0,i.kt)("inlineCode",{parentName:"p"},"get-keys")," privilege is separate. The ",(0,i.kt)("inlineCode",{parentName:"p"},"get-keys")," privilege is used to fetch\nprincipals' keys, which is equivalent to knowing the password hash in other\nauthentication systems, so it is not a privilege to be handed out lightly."),(0,i.kt)("h2",{id:"how-does-it-actually-work"},"How does it actually work?"),(0,i.kt)("p",null,"Kerberos is pretty complicated, so explaining exactly how it works gets messy\nvery quickly, but here are the main steps that are taken by Kerberos when a\nuser logs in to their machine. A great guide on these steps is ",(0,i.kt)("a",{parentName:"p",href:"https://www.roguelynn.com/words/explain-like-im-5-kerberos/"},"Lynn Root's\n",(0,i.kt)("em",{parentName:"a"},"Explain it like I'm 5: Kerberos")),", and explains it better and in more\ndepth than the rather cursory overview found here:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"The user enters their username. Their login is sent to the KDC to receieve a\nticket.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"The KDC checks in its database for a principal that matches the one sent by\nthe client. If one is found, it returns a TGT, which is encrypted with the\nuser's key (originally generated from the user's password and stored on the\nKDC).")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"The client gets the encrypted TGT and decrypts it with the user's entered\npassword. Note the user's password was never directly sent across the\nnetwork at any stage in the process. Then the TGT is stored in the cache on\nthe client machine until it expires, when it is requested again if needed.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"The user can then use this TGT to make requests for service tickets from the\nKDC."))),(0,i.kt)("p",null,"Kerberos makes sure that nobody can request a TGT for a user except the user\nthemselves by using preauthentication, which essentially means that the KDC\nrequests additional authentication than just a principal to give a TGT, since\notherwise the key in the TGT could just be cracked offline by an attacker using\na dictionary attack. This preauthentication typically takes the form of\nsomething like the current time encrypted with the user's key. If an attacker\nintercepts this communication, they do not have the exact timestamp or the\nuser's key to attempt to decrypt it. We require pre-authentication at the OCF\nby specifying ",(0,i.kt)("inlineCode",{parentName:"p"},"require-preauth = true")," in ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ocf/puppet/blob/17bc94b395e254529d97c84fb044f76931439fd7/modules/ocf_kerberos/files/kdc.conf#L13"},"/var/lib/heimdal-kdc/kdc.conf"),"."),(0,i.kt)("p",null,"Then, if the user wants to communicate with other services or hosts, like SSH\nor a HTTP Kerberos login, then they make more requests to the KDC:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"The client will request a service or host principal from the TGS (Ticket\nGranting Service) using the TGT received before. The TGS in our case is the\nsame as the KDC, but for some systems they could be different hosts. The TGS\nsends in response a service ticket, which the client then stores for use in\ncontacting a service and authenticating until the service ticket expires.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"The client can then use this service ticket to send with requests to\nKerberos-enabled services, like SSH, as user authentication. The service\nwill verify the ticket with the KDC when used, to make sure it is valid for\nthe user issuing the request."))))}d.isMDXComponent=!0}}]);